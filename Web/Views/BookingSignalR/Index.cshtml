@using Web.Models;

@model BookingSignalRViewModel

@{
    ViewBag.Title = "Booking";
    int count = 1;
    int nextFloor = Model.Floor == 1 ? 2 : 1;
}

<link rel="stylesheet" href="~/Content/flex-1.0.0.css" />

<div class="row">
    <div class="col-md-6" style="min-height:70px;">
        <h1>Floor @Model.Floor</h1>
    </div>
    <div class="col-md-6 text-right" style="min-height:70px; display: flex; justify-content: flex-end; align-items: flex-end;">
        <a href="@Url.Content("~/BookingSignalR/Index?floor=" + @nextFloor)">Go to Floor @nextFloor</a>
    </div>
</div>

<h6>*Ensure on same floor due to in-memory data only</h6>

<div class="main-div">
    @Html.HiddenFor(a => a.Floor)

    @if (Model.Rows != null && Model.Rows.Count > 0)
    {
        <div class="flex-container">
            <div class="flex-item" data-status="Skip" data-name="None"></div>
            <div class="flex-item" data-status="Skip" data-name="None">1</div>
            <div class="flex-item" data-status="Skip" data-name="None">2</div>
            <div class="flex-item" data-status="Skip" data-name="None">3</div>
            <div class="flex-item" data-status="Skip" data-name="None">4</div>
            <div class="flex-item" data-status="Skip" data-name="None">5</div>
        </div>

        foreach (var row in Model.Rows)
        {
            <div class="flex-container">

                @if (count == 1)
                {
                    <div class="flex-item" data-status="Skip" data-name="None">A</div>
                }
                else if (count == 2)
                {
                    <div class="flex-item" data-status="Skip" data-name="None">B</div>
                }
                else
                {
                    <div class="flex-item" data-status="Skip" data-name="None">C</div>
                }

                @foreach (var unit in row.Units)
                {
                    <div id="@unit.CssID" class="flex-item" data-id="@unit.ID" data-status="@unit.Status" data-name="@unit.Name" data-tooltip="@unit.Status">@unit.Name</div>
                }
            </div>

            count++;
        }
    }
</div>

@section Scripts{
    <script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
    <script src="https://signalrwebapi.azurewebsites.net/signalr/hubs"></script>

    <script>
        $(document).ready(function () {
            var flexItems = document.getElementsByClassName("flex-item");
            for (var i = 0; i < flexItems.length; i++) {
                const flexItemStatus = flexItems.item(i).dataset.status;

                if (!flexItemStatus) {
                    return;
                }

                if (flexItemStatus == 'Skip') {
                    flexItems.item(i).className += ' transparent-colour';
                }
                else if (flexItemStatus == 'Available') {
                    flexItems.item(i).className += ' green-colour is-item';
                }
                else if (flexItemStatus == 'Pending') {
                    flexItems.item(i).className += ' gray-colour is-item';
                }
                else if (flexItemStatus == 'Sold') {
                    flexItems.item(i).className += ' red-colour is-item';
                }
            }

            //--------Hub Start----------
            $.connection.hub.url = 'https://signalrwebapi.azurewebsites.net/signalr';
            var bookingHubProxy = $.connection.bookingHub;

            bookingHubProxy.client.clientNewBooking = function (request) {
                const floor = $('#Floor').val();
                const flexItem = $(`#${request.CssID}`);

                if (floor == request.Floor && flexItem && flexItem.attr('class').indexOf('green-colour') != -1) {
                    if (request.Status == 'Pending') {
                        flexItem.removeClass('green-colour gray-colour red-colour').addClass('gray-colour');
                    }
                    else if (request.Status == 'Sold') {
                        flexItem.removeClass('green-colour gray-colour red-colour').addClass('red-colour');
                    }

                    flexItem.attr('data-status', request.Status);
                    flexItem.attr('data-tooltip', request.Status);
                }
            };

            $.connection.hub.connectionSlow(function () {
                console.log('We are currently experiencing difficulties with the connection. Please reload the page.')
            });

            $.connection.hub.error(function (error) {
                console.log('Server error: ' + error)
            });

            $.connection.hub.disconnected(function () {
                if ($.connection.hub.lastError) {
                    alert("Disconnected. Reason: " + $.connection.hub.lastError.message);
                }
            });

            $.connection.hub.start()
                .done(function () {
                    console.log('Now connected, connection ID=' + $.connection.hub.id);
                })
                .fail(function () {
                    console.log('Could not Connect!');
                });

            document.body.onclick = function (e) {
                e = e.target

                if (e.className && e.className.indexOf('green-colour') != -1) {
                    let floor = $('#Floor').val();

                    //bookingHubProxy.server.serverNewBooking({ Floor: floor, ID: e.dataset.id, CssID: e.id, Status: e.dataset.status }).done(function () {
                    //    console.log('Invocation of ServerNewBooking succeeded');
                    //}).fail(function (error) {
                    //    console.log('Invocation of ServerNewBooking failed. Error: ' + error);
                    //});

                    window.open(`/WindowPopup/Index?floor=${floor}&unit=${e.dataset.name}&cssID=${e.id}`, "", "width=800,height=500");
                }
            }
            //--------Hub End----------

        });
    </script>
}